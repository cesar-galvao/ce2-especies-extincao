library(tidyverse)
data <- read.csv('lista-de-especies-ameacas-2020.csv', sep = ';')
View(data)
data <- read.csv('lista-de-especies-ameacas-2020.csv', sep = ';', encoding = 'UTF-8')
View(data)
?READ.CSV
?read.csv
data <- read.csv('lista-de-especies-ameacas-2020.csv', sep = ';', encoding = 'UTF-8', header = TRUE)
data <- read.csv('lista-de-especies-ameacas-2020.csv', sep = ';', encoding = 'UTF-8')
data2 <- fread('lista-de-especies-ameacas-2020.csv', sep = ';', encoding = 'UTF-8')
library(data.table)
data2 <- fread('lista-de-especies-ameacas-2020.csv', sep = ';', encoding = 'UTF-8')
View(data2)
?fread
data2 <- fread('lista-de-especies-ameacas-2020.csv', sep = ';')
data2 <- read.csv2('lista-de-especies-ameacas-2020.csv', sep = ';', encoding = 'UTF-8')
View(data2)
data2 <- read.csv2('lista-de-especies-ameacas-2020.csv', sep = '', encoding = 'UTF-8')
View(data2)
View(data)
View(data2)
data <- read.csv('lista-de-especies-ameacas-2020.csv', sep = '', encoding = 'UTF-8')
View(data)
data %>%
mutate(concat = str_c(everything()))
data %>%
mutate(concat = str_c(data[1:30]))
data %>%
mutate(concat = str_c(data[,1:30]))
glimpse(data)
data %>%
mutate(concat = str_c(X.U.FEFF.Fauna.Flora.Grupo.Família.Espécie : Ocorrência.......))
data$Ameaça.Sigla
data[1,1:30]
str_c(data[1,1:30])
unite(data[1,1:30])
?unite
?str_c
data %>%
transmute(concat = str_c(1:30, sep = ""))
str_c("Letter: ", letters)
data %>%
unite("concat", everything())
a <- data %>%
unite("concat", everything())
View(a)
?unite
a <- data %>%
unite("concat", everything(), sep = '')
a %>%
mutate(concat_virgulas = str_replace_all(concat, pattern = "\".*;.*\"", replacement = "\".*,.*\""))
b <- a %>%
mutate(concat = str_replace_all(concat, patter = ",", replacement = ""),
concat_virgulas = str_replace_all(concat, pattern = "\".*;.*\"", replacement = "\".*,.*\""))
View(b)
a <- data %>%
unite("concat", everything(), sep = ' ')
b <- a %>%
mutate(concat = str_replace_all(concat, patter = ",", replacement = ""),
concat_virgulas = str_replace_all(concat, pattern = "\".*;.*\"", replacement = "\".*,.*\""))
b[2,2]
b[2,1]
a[2,]
?read.csv
View(data)
View(b)
library(readtext)
install.packages("readtext")
library(readtext)
?readtext
datatxt <= readtext('lista-de-especies-ameacas-2020.txt')
datatxt <- readtext('lista-de-especies-ameacas-2020.txt')
View(datatxt)
DATA_DIR <- system.file("extdata/", package = "readtext")
datatxt <- readtext(paste0(DATA_DIR, 'lista-de-especies-ameacas-2020.txt')
View(datatxt)
View(datatxt)
DATA_DIR <- system.file("extdata/", package = "readtext")
datatxt <- readtext(paste0(DATA_DIR, 'lista-de-especies-ameacas-2020.txt'), encoding = "UTF-8")
datatxt <- readtext(paste0('lista-de-especies-ameacas-2020.txt'), encoding = "UTF-8")
View(datatxt)
?read.table
data2 <- read.table('lista-de-especies-ameacas-2020.csv', sep = '', encoding = 'UTF-8', quote = "\"")
data2 <- read.table('lista-de-especies-ameacas-2020.txt', sep = NULL, encoding = 'UTF-8', quote = "\"")
data2 <- read.table('lista-de-especies-ameacas-2020.txt', sep = "\n", encoding = 'UTF-8', quote = "\"")
data2 <- read.table('lista-de-especies-ameacas-2020.txt', sep = "\n", encoding = 'UTF-8')
data2 <- read.table('lista-de-especies-ameacas-2020.txt', encoding = 'UTF-8')
data2 <- scan('lista-de-especies-ameacas-2020.txt', sep = '\n', quote = "\"")
data2 <- scan('lista-de-especies-ameacas-2020.txt', character(), sep = '\n', quote = "\"")
data2 <- scan('lista-de-especies-ameacas-2020.txt', character(), sep = '\n', quote = "\"", encoding = "UTF-8")
?scan
?sep
data2 <- scan('lista-de-especies-ameacas-2020.txt', what = character(),
sep = '\n', quote = "'\"", encoding = "UTF-8")
A <- readLines(con <- file("lista-de-especies-ameacas-2020.txt", encoding = 'UTF-8'))
?readLines
A <- readLines("lista-de-especies-ameacas-2020.txt", encoding = 'UTF-8'))
A <- readLines("lista-de-especies-ameacas-2020.txt", encoding = 'UTF-8')
A
data2 <- read.csv('lista-de-especies-ameacas-2020.csv', sep = '', encoding = 'UTF-8', quote = "'\"")
View(data2)
data2 <- read.table('lista-de-especies-ameacas-2020.csv', sep = "\"", encoding = 'UTF-8')
data2 <- read.table('lista-de-especies-ameacas-2020.csv', sep = "\"", encoding = 'UTF-8', quote = "'\"")
data2 <- read.table('lista-de-especies-ameacas-2020.csv', sep = "\"", encoding = 'UTF-8', quote = "'\"", skip = 1)
data2 <- read.table('lista-de-especies-ameacas-2020.csv', sep = "\"", encoding = 'UTF-8', quote = "'\"", skip = 1, header = FALSE)
data <- read.table('lista-de-especies-ameacas-2020.txt', header=TRUE, sep=";", quote="\"")
View(data)
data <- read.table('lista-de-especies-ameacas-2020.csv', header=TRUE, sep=";", quote="\"")
data <- read.table('lista-de-especies-ameacas-2020.csv', header=TRUE, sep=";", quote="\"", skip = 1)
data <- read.table('lista-de-especies-ameacas-2020.csv', header=TRUE, sep=";", quote="\"", skip = 1, header = FALSE)
?read.table
data <- read.csv('lista-de-especies-ameacas-2020.csv', sep = '', encoding = 'UTF-8')
View(data)
data <- read.csv('lista-de-especies-ameacas-2020.csv', sep = '', encoding = 'UTF-8', quote = "\"")
View(data)
data <- read.table('lista-de-especies-ameacas-2020.csv', sep = '', encoding = 'UTF-8', quote = "\"")
data <- read.csv('lista-de-especies-ameacas-2020.csv', sep = '',, quote = "\"")
data <- read.csv('lista-de-especies-ameacas-2020.csv', sep = '', quote = "\"")
View(data)
data <- read.csv('lista-de-especies-ameacas-2020.csv', sep = '', encoding = 'UTF-8', quote = "\"")
View(data)
data <- read.csv('lista-de-especies-ameacas-2020.csv', sep = '', encoding = 'UTF-8', quote = "\"\"")
View(data)
View(data)
data <- read.csv('especies_2020.csv', sep = '', encoding = 'UTF-8', quote = "\"")
View(data)
data <- read.csv('especies_2020.csv', sep = '', encoding = 'UTF-8', quote = "\"")
View(data)
data <- read.csv('especies_2020.csv', sep = ' ', encoding = 'UTF-8', quote = "\"")
View(data)
library(tidyverse)
library(data.table)
data <- read.csv('especies_2020.csv', sep = ' ', encoding = 'UTF-8', quote = "\"")
View(data)
data <- read.csv('especies_2020.csv', sep = '', encoding = 'UTF-8', quote = "\"", skip = 1)
data <- read.csv('especies_2020.csv', sep = '', encoding = 'UTF-8', quote = "\"", skip = 1, header = FALSE)
View(data)
data <- read.csv('especies_2020.csv', sep = '\n', encoding = 'UTF-8', quote = "\"", skip = 1, header = FALSE)
View(data)
View(data)
data2 <- data %>%
mutate(alterado = str_replace_all(V1, pattern = "\".*;*.*\"", replacement = ","))
View(data2)
View(data2)
View(data2)
data2 <- data %>%
mutate(alterado = str_replace_all(V1, pattern = "\".*;*.*\"", replacement = "\".*,*.*\""))
View(data2)
data2 <- data %>%
mutate(alterado = str_replace_all(V1, pattern = "\"", replacement = "\'"))
View(data2)
?str_replace_all
fruits <- c("one apple", "two pears", "three bananas")
str_replace(fruits, "[aeiou]", "-")
str_replace_all(fruits, "[aeiou]", "-")
View(data)
data[1,1]
data2 <- data %>%
mutate(alterado = str_remove_all(V1, pattern = ",", replacement = ""))
data2 <- data %>%
mutate(alterado = str_remove_all(V1, pattern = ","))
data2[1,1]
View(data)
?str_remove_alll
?str_remove_all
View(data2)
string <- "'aerfsad;asd; asda;'"
string
string <- "'aerfsad;'asd; asda;"
string
str_replace_all(string, pattern = ";", replacement = ",")
str_replace_all(string, pattern = "\'.*;*\'", replacement = ",")
data2 <- data %>%
mutate(alterado = str_remove_all(V1, pattern = ","),
simples = str_replace_all(alterado, pattern = "\"", replacement = "\'"))
View(data2)
data2 <- data %>%
mutate(alterado = str_remove_all(V1, pattern = ","),
simples = str_replace_all(alterado, pattern = "\"", replacement = "\'"),
virgulas = str_replace_all(alterado, pattern = "\'.*;*\'", replacement = ","))
data2 <- data %>%
mutate(alterado = str_remove_all(V1, pattern = ","),
simples = str_replace_all(alterado, pattern = "\"", replacement = "\'"),
virgulas = str_replace_all(simples, pattern = "\'.*;*\'", replacement = ","))
data2 <- data %>%
mutate(alterado = str_remove_all(V1, pattern = ","),
simples = str_replace_all(alterado, pattern = "\"", replacement = "\'"),
virgulas = str_replace_all(simples, pattern = "\';*\'", replacement = ","))
data2[2,4]
data2 <- data %>%
mutate(alterado = str_remove_all(V1, pattern = ","),
simples = str_replace_all(alterado, pattern = "\"", replacement = "\'"),
virgulas = str_replace_all(simples, pattern = "\';*\'", replacement = "\',*\'"))
data2[2,4]
str_replace_all(string, pattern = "\';*\'", replacement = "\',\'")
string <- "'aerfsad;'asd; asda;"
str_replace_all(string, pattern = "\';*\'", replacement = "\',\'")
str_replace_all(string, pattern = "\'.*;*.*\'", replacement = "\'.*,*.*\'")
str_replace_all(string, pattern = "\'\.*;*\.*\'", replacement = "\'\.*,*\.*\'")
str_replace_all(string, pattern = "\'\\.*;*\\.*\'", replacement = "\'\\.*,*\\.*\'")
str_replace_all(string, pattern = "\'\\.*;\\.*\'", replacement = "\'\\.*,\\.*\'")
str_replace_all(string, pattern = "\'\\.*;\'", replacement = "\'\\.*,\'")
str_replace_all(string, pattern = "\'\\.*;\'", replacement = "\'\\.*,\'")
str_replace_all(string, pattern = "\\'\\.*;\\'", replacement = "\\'\\.*,\\'")
str_replace_all(string, pattern = "\'\\.*\;\'", replacement = "\'\\.*\,\'")
str_replace_all(string, pattern = "\'\\.*;\'", replacement = "\'\\.*\,\'")
str_replace_all(string, pattern = "\'\\.*;\'", replacement = "\'\\.*,\'")
str_replace_all(string, pattern = "\'\\.*; \'", replacement = "\'\\.*, \'")
str_replace_all(string, pattern = "\'\\.*;\\.*\'", replacement = "\'\\.*,\\.*\'")
str_replace_all(string, pattern = "\'.*\'", replacement = "\'a\'")
str_replace_all(string, pattern = "\'.*;\'", replacement = "\'a\'")
str_replace_all(string, pattern = "\'.*;\'", replacement = "\'a,\'")
str_replace_all(string, pattern = "\'.*;\'", replacement = "\'.*,\'")
str_replace_all(string, pattern = "\'\\.*;\'", replacement = "\'\\.*,\'")
str_replace_all(string, pattern = "\'.*;\'", replacement = "\'.*,\'")
str_replace_all(string, pattern = "\'.*;\'", replacement = "\'.*,\'")
str_replace_all(string, pattern = "\'.*;\'", replacement = "\',\'")
str_replace_all(string, pattern = "\'[:alpha:]"\'", replacement = "\' ,\'")
str_replace_all(string, pattern = "\'[:alpha:]\'", replacement = "\' ,\'")
str_replace_all(string, pattern = "\'[:alpha:].*\'", replacement = "\' ,\'")
str_replace_all(string, pattern = "\'[:alpha:].*\'", replacement = "\',\'")
str_replace_all(string, pattern = "\'[^:alpha:].*\'", replacement = "\',\'")
str_replace_all(string, pattern = "\'[^:alpha:]\'", replacement = "\',\'")
str_replace_all(string, pattern = "\'[^[:alpha:]]\'", replacement = "\',\'")
str_replace_all(string, pattern = "\'[^;]\'", replacement = "\',\'")
str_replace_all(string, pattern = "[^;]", replacement = "8")
str_replace_all(string, pattern = "[^:alpha]", replacement = "8")
str_replace_all(string, pattern = "[^:alpha:]", replacement = "8")
str_replace_all(string, pattern = "[^[:alpha:]]", replacement = "8")
str_replace_all(string, pattern = "[^[:alpha:| ]]", replacement = "8")
str_replace_all(string, pattern = "[^[:alpha:]| ]", replacement = "8")
str_replace_all(string, pattern = "[^[:alpha:]| ]", replacement = " ")
str_replace_all(string, pattern = "\'[^[:alpha:]]\'", replacement = " ")
str_replace_all(string, pattern = "\\'[^[:alpha:]]\\'", replacement = " ")
str_replace_all(string, pattern = "\'[^[:alpha:]]*\'", replacement = " ")
str_replace_all(string, pattern = "9[^[:alpha:]]*9", replacement = " ")
string <- "9aerfsad;9asd; asda;"
str_replace_all(string, pattern = "9[^[:alpha:]]*9", replacement = " ")
str_replace_all(string, pattern = "9[^[:alpha:]]9", replacement = " ")
str_replace_all(string, pattern = "9", replacement = " ")
str_replace_all(string, pattern = "9.*", replacement = ".*")
str_replace_all(string, pattern = "^9;*9$", replacement = "K")
string <- "9 aerfsad;9 asd; asda;"
str_replace_all(string, pattern = "9[^[:alpha:]]9", replacement = "K")
str_replace_all(string, pattern = "9[^ ]9", replacement = "K")
str_replace_all(string, pattern = "9[^\ ]9", replacement = "K")
str_replace_all(string, pattern = "^\\.[^a]$\\.", replacement = "K")
string <- "... a8erfs4ad;... asd; asda;"
str_replace_all(string, pattern = "^\\.[^a]$\\.", replacement = "K")
str_replace_all(string, pattern = "[^a]", replacement = "K")
str_replace_all(string, pattern = "\\.[^a]\\.", replacement = "K")
str_replace_all(string, pattern = "\\..*[^a].*\\.", replacement = "K")
str_replace_all(string, pattern = "\\..*[^a].*\\.", replacement = "K.*")
